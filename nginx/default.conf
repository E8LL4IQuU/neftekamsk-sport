server {
	server_name arikalee.burger.moe;

	#access_log /var/log/nginx/host.access.log main

	location /api/register {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://sport_backend:8000;
		proxy_redirect off;
	}

	location /api/login {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://sport_backend:8000;
		proxy_redirect off;
	}

	location /api/healthcheck {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://sport_backend:8000;
		proxy_redirect off;
	}

	location /api/user {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://sport_backend:8000;
		proxy_redirect off;
	}

	location /api/logout {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://sport_backend:8000;
		proxy_redirect off;
	}


	location / {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /news {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /schedule {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /sections {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /gallery {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /events {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /documents {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /people {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /login {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /admin {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location /logout {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /index.html; 
	}

	location ~ /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}

	#error_page 404                 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	error_page      500 502 503 504 /50x.html;
	location = /50.html {
		root /usr/share/nginx/html;
	}


	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/arikalee.burger.moe/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/arikalee.burger.moe/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
	if ($host = arikalee.burger.moe) {
		return 301 https://$host$request_uri;
	} # managed by Certbot


	listen 80;
	listen  [::]:80;
	server_name arikalee.burger.moe;
	return 404; # managed by Certbot


}
